services:
  db:
    container_name: portfolio-stage-db
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: portfolio_db
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - portfolio-network
  
  app:
    container_name: portfolio-backend
    image: portfolioback:0.0.2
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - portfolio-network
  
  fe:
    container_name: portfolio-frontend
    image: portfoliofront:0.0.2
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - NODE_OPTIONS="--max-old-space-size=4096"
      - BACKEND_BASE_URL=http://localhost:8080/api
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:4000" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - portfolio-network

networks:
  portfolio-network:
    driver: bridge

volumes:
  pgdata:
